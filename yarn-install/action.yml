name: 'Yarn project build setup'
description: 'Common build setup for yarn projects'
inputs:
  dependencies:
    description: '"production" or "all"'
    required: false
    default: 'all'
  npm-auth-token:
    description: 'Token to access NPM repos'
    required: false
  cache-key:
    description: 'Custom cache prefix, final key will be $CACHE_KEY-$RUNNER_OS-$HASH_OF_YARN_LOCK-$DEPENDENCIES'
    required: false
    default: 'yarn'
runs:
  using: 'composite'
  steps:
    # This action is used to install packages twice during build phase
    # and it must not do git checkout, which would wipe out the built application
    # in the build/ directory.
    - name: Read node version from .nvmrc
      id: nvmrc
      shell: bash
      run: |
        [ ! -f "./.nvmrc" ] && echo "ERROR: File ./.nvmrc not found, exiting..." && exit 1
        echo "name=nvmrc::$(cat .nvmrc)" >> $GITHUB_OUTPUT
        echo "NVMRC: $(cat .nvmrc)"

    - name: Set up node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ steps.nvmrc.outputs.nvmrc }}
        registry-url: 'https://npm.pkg.github.com/'
        scope: '@yleisradio'
        cache: yarn

    - name: Get yarn version
      id: yarn-version
      shell: bash
      run: echo "name=version::$(yarn --version | cut -d . -f 1)" >> $GITHUB_OUTPUT

    - name: "Set Yarn cache with dependencies: '${{ inputs.dependencies }}'"
      uses: actions/cache@v3
      id: cache
      with:
        path: '**/node_modules'
        key: ${{ inputs.cache-key }}-${{ runner.os }}-${{ inputs.dependencies }}-${{ hashFiles('yarn.lock') }}

    - name: Set npm registry auth token
      shell: bash
      if: inputs.npm-auth-token
      run: yarn config set npmScopes.yleisradio.npmAuthToken ${{ inputs.npm-auth-token }}

    - name: Install packages with Yarn
      shell: bash
      env:
        YARN_ENABLE_SCRIPTS: '0'
      run: |
        if [ "${{ steps.cache.outputs.cache-hit }}" == "true" ]; then
          echo "INFO: node_modules CACHE HIT"
          exit 0
        fi

        echo "INFO: node_modules CACHE MISS. Caching dependencies now."
        if [ "${{ steps.yarn-version.outputs.version }}" == "1" ]; then
          if [ "${{ inputs.dependencies }}" == "production" ]; then
            yarn --frozen-lockfile --ignore-scripts --production
          else
            yarn --frozen-lockfile --ignore-scripts
          fi
        else
          if [ "${{ inputs.dependencies }}" == "production" ]; then
            yarn plugin import workspace-tools
            yarn workspaces focus -A --production
          else
            yarn --immutable
          fi
        fi
